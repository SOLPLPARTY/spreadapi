/*
 * SpreadAPI 1.0, created by Mateusz Zieliński
 * Home page: https://spreadapi.com
 * Sponsored by: https://roombelt.com
 * License: Apache 2.0
 */

// Admin account that has read/write access to all sheets
User("admin", "PUT_STRONG_PASSWORD_HERE", ALL);

// User account that can add entries to the "transactions" sheet
// User("user", "Passw0rd!", { transactions: POST });

// User account that can add entries to the "transactions" sheet and read from "summary"
// User("user", "Passw0rd!", { transactions: POST, summary: GET });

// Anonymous account that has write access to a specified sheet
// User("anonymous", UNSAFE(""), { transactions: POST });

// Anonymous account that has read/write access to all sheets (NOT RECOMMENDED!)
// User("anonymous", UNSAFE(""), ALL);

// Anonymous account that has read access to all sheets (NOT RECOMMENDED!)
// User("anonymous", UNSAFE(""), GET);

/*
 * Copyright 2019 Mateusz Zieliński
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
 * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR
 * PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE
 * FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 */

/* Complete source code of the REST API can be found below */

/**
 * @OnlyCurrentDoc
 */

/*
 * SpreadAPI 1.0, created by Mateusz Zieliński
 * Home page: https://spreadapi.com
 * Sponsored by: https://roombelt.com
 * License: Apache 2.0
 */


/*
 * Configure authentication below
 * Learn more at docs.spreadapi.com
 */

// Admin account that has read/write access to all sheets
User("admin", "PUT_STRONG_PASSWORD_HERE", ALL);

// User account that can add entries to the "transactions" sheet
// User("user", "Passw0rd!", { transactions: POST });

// User account that can add entries to the "transactions" sheet and read from "summary"
// User("user", "Passw0rd!", { transactions: POST, summary: GET });

// Anonymous account that has write access to a specified sheet
// User("anonymous", UNSAFE(""), { transactions: POST });

// Anonymous account that has read/write access to all sheets (NOT RECOMMENDED!)
// User("anonymous", UNSAFE(""), ALL);

// Anonymous account that has read access to all sheets (NOT RECOMMENDED!)
// User("anonymous", UNSAFE(""), GET);

/*
 * Copyright 2019 Mateusz Zieliński
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
 * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR
 * PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE
 * FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 */

/**
 * @OnlyCurrentDoc
 */

function doPost(e){try{var t=JSON.parse(e.postData.contents)}catch(t){return httpResponse(error(400,"invalid_post_payload",{payload:e.postData.contents,type:e.postData.type}))}return Array.isArray(t)?httpResponse(t.map(handleRequest)):httpResponse(handleRequest(t))}function handleRequest(e){const t=SpreadsheetApp.getActiveSpreadsheet(),n=(e.sheet||"").toLowerCase(),r=null==e.id?null:+e.id,o=(e.method||"GET").toUpperCase(),s=e.key||"";if(!hasAccess(s,n,o))return error(401,"unauthorized",{});if(!isStrongKey(s))return error(401,"weak_key",{message:"Authentication key should be at least 8 characters long and contain at least one lower case, upper case, number and special character. Update your password or mark it as UNSAFE. Refer to the documentation for details."});const i=t.getSheetByName(n);if(!i)return error(404,"sheet_not_found",{sheet:n});if(null!=r&&r<=1)return error(400,"row_index_invalid",{_id:r});const a=e.payload;switch(o){case"GET":return null!=r?handleGetSingleRow(i,r):handleGetMultipleRows(i,e);case"POST":return handlePost(i,a);case"PUT":return handlePut(i,r,a);case"DELETE":return handleDelete(i,r);default:return error(404,"unknown_method",{method:o})}}function handleGetSingleRow(e,t){const n=e.getLastColumn(),r=getHeaders(e),o=mapRowToObject(e.getRange(t,1,1,n).getValues()[0],t,r);return o?data(200,o):error(404,"row_not_found",{_id:t})}function handleGetMultipleRows(e,t){const n=e.getLastColumn(),r=getHeaders(e),o=e.getLastRow(),s=Math.max(o-2+1,0),i=null!=t.limit?+t.limit:s,a="string"!=typeof t.order||"desc"!==t.order.toLowerCase();if(isNaN(i)||i<0)return error(404,"invalid_limit",{limit:i});var u=a?2:o-i+1;if(null!=t.start_id){const e=+t.start_id;if(e<2||e>o)return error(404,"start_id_out_of_range",{start_id:e});u=e-(a?0:i-1)}const c=Math.min(u+i-1,o);if((u=Math.max(u,2))>c)return data(200,[]);const f=e.getRange(u,1,c-u+1,n).getValues().map(function(e,t){return mapRowToObject(e,u+t,r)});a||f.reverse();var l=a?c+1:u-1;return(l<2||l>o)&&(l=void 0),data(200,f.filter(isTruthy),{next:l})}function handlePost(e,t){const n=mapObjectToRow(t,getHeaders(e));return e.appendRow(n),data(201)}function handlePut(e,t,n){if(null==t)return error(400,"row_id_missing",{});const r=mapObjectToRow(n,getHeaders(e));return e.getRange(t,1,1,r.length).setValues([r]),data(201)}function handleDelete(e,t){return e.getRange("$"+t+":$"+t).setValue(""),data(204)}function httpResponse(e){return ContentService.createTextOutput(JSON.stringify(e)).setMimeType(ContentService.MimeType.JSON)}function error(e,t,n){return{status:e,error:{code:t,details:n}}}function data(e,t,n){n=n||{};const r={status:e,data:t};for(var o in n)n.hasOwnProperty(o)&&(r[o]=n[o]);return r}function getHeaders(e){const t=e.getRange(1,1,1,e.getLastColumn()).getValues()[0];for(var n=t.length-1;n>=0;n--)if(!isEmpty(t[n]))return t.slice(0,n+1);return[]}function isTruthy(e){return!!e}function isEmpty(e){return""===e||null==e}function find(e,t){if(Array.isArray(e))for(var n=0;n<e.length;n++)if(t(e[n]))return e[n]}function mapObjectToRow(e,t){return t.map(function(t){return isEmpty(t)?"":void 0===e[t]?"":e[t]})}function mapRowToObject(e,t,n){if(e.every(isEmpty))return null;const r={_id:t};for(var o=0;o<n.length;o++)isEmpty(n[o])||(r[n[o]]=e[o]);return r}var users;function User(e,t,n){users||(users=[]),users.push({name:e,key:t,permissions:n})}function getUserWithKey(e){return find(users,function(t){return t.key===e||"object"==typeof t&&t.key.__unsafe===e})}function isStrongKey(e){const t=new RegExp("^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#$%^&*])(?=.{8,})"),n=getUserWithKey(e);return!!n&&(n.key.__unsafe===e||n.key.match(t))}function getPermissions(e,t){if(Array.isArray(e.permissions))return e.permissions;if("function"==typeof e.permissions)return e.permissions;const n=Object.keys(e.permissions);for(var r=0;r<n.length;r++)if(n[r].toLowerCase()===t.toLowerCase())return e.permissions[n[r]];return e.permissions.ALL}function hasAccess(e,t,n){const r=getUserWithKey(e);if(!r)return!1;const o=getPermissions(r,t);return!!o&&!(o!==ALL&&o.toString()!==n&&!find(o,function(e){return e===ALL})&&!find(o,function(e){return e.toString()===n}))}function GET(){}function POST(){}function PUT(){}function DELETE(){}function ALL(){}function UNSAFE(e){return{__unsafe:e}}GET.toString=function(){return"GET"},POST.toString=function(){return"POST"},PUT.toString=function(){return"PUT"},DELETE.toString=function(){return"DELETE"},ALL.toString=function(){return"*"};
